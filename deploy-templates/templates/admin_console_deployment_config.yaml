apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: {{ .Values.name }}
  name: {{ .Values.name }}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    app: ddm-admin-console
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Values.name }}
    spec:
      containers:
        - env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: HOST
              value: {{ .Values.host }}
            - name: BASE_PATH
              value: "{{if .Values.basePath}}/{{ .Values.basePath }}{{else}}{{end}}"
            - name: EDP_ADMIN_CONSOLE_VERSION
              value: "{{ .Values.version }}"
            - name: EDP_VERSION
              value: "{{ .Values.version }}"
            - name: AUTH_KEYCLOAK_ENABLED
              value: "false"
            - name: DNS_WILDCARD
              value: "{{ .Values.dnsWildCard }}"
            - name: OPENSHIFT_CLUSTER_URL
              value: "console-openshift-console.{{ .Values.dnsWildCard }}"
            - name: INTEGRATION_STRATEGIES
              value: "Create,Import"
            - name: BUILD_TOOLS
              value: "maven"
            - name: DEPLOYMENT_SCRIPT
              value: "helm-chart,openshift-template"
            - name: PLATFORM_TYPE
              value: "openshift"
            - name: VERSIONING_TYPES
              value: "default,edp"
            - name: CI_TOOLS
              value: "Jenkins,GitLab CI"
            - name: PERF_DATA_SOURCES
              value: "Sonar,Jenkins,GitLab"
            - name: VCS_INTEGRATION_ENABLED
              valueFrom:
                configMapKeyRef:
                  key: vcs_integration_enabled
                  name: edp-config
            - name: EDP_NAME
              valueFrom:
                configMapKeyRef:
                  key: edp_name
                  name: edp-config
            - name: PROJECT_MASK_URL
              value: "{{.Values.projectUrlMask}}"
            - name: IMAGE_STREAM_MASK_URL
              value: "{{ .Values.imageStreamUrlMask }}"
          image: "{{ .Values.image.name }}:{{ .Values.image.version }}"
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 180
            periodSeconds: 20
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
          name: ddm-admin-console
          ports:
            - containerPort: 8080
              protocol: TCP
          readinessProbe:
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 20
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
          resources:
            requests:
              memory: 500Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: {{ .Values.operator.serviceAccountName }}
      serviceAccountName: {{ .Values.operator.serviceAccountName }}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
    - type: ConfigChange
