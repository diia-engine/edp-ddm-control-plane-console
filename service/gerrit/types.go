package gerrit

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

type GerritProjectStatus struct {
	Value    string   `json:"value"`
	Branches []string `json:"branches"`
}

type GerritProjectSpec struct {
	OwnerName         string `json:"ownerName"`
	Name              string `json:"name"`
	Parent            string `json:"parent"`
	Description       string `json:"description"`
	PermissionsOnly   bool   `json:"permissionsOnly"`
	CreateEmptyCommit bool   `json:"createEmptyCommit"`
	SubmitType        string `json:"submitType"`
	Branches          string `json:"branches"`
	Owners            string `json:"owners"`
	RejectEmptyCommit string `json:"rejectEmptyCommit"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +k8s:openapi-gen=true
type GerritProject struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              GerritProjectSpec   `json:"spec,omitempty"`
	Status            GerritProjectStatus `json:"status,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +k8s:openapi-gen=true
type GerritProjectList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []GerritProject `json:"items"`
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GerritProject) DeepCopyInto(out *GerritProject) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GerritProject.
func (in *GerritProject) DeepCopy() *GerritProject {
	if in == nil {
		return nil
	}
	out := new(GerritProject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GerritProject) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GerritProjectList) DeepCopyInto(out *GerritProjectList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GerritProject, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GerritProjectList.
func (in *GerritProjectList) DeepCopy() *GerritProjectList {
	if in == nil {
		return nil
	}
	out := new(GerritProjectList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GerritProjectList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GerritProjectSpec) DeepCopyInto(out *GerritProjectSpec) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GerritProjectSpec.
func (in *GerritProjectSpec) DeepCopy() *GerritProjectSpec {
	if in == nil {
		return nil
	}
	out := new(GerritProjectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GerritProjectStatus) DeepCopyInto(out *GerritProjectStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GerritProjectStatus.
func (in *GerritProjectStatus) DeepCopy() *GerritProjectStatus {
	if in == nil {
		return nil
	}
	out := new(GerritProjectStatus)
	in.DeepCopyInto(out)
	return out
}
